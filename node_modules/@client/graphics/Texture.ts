export default class Texture {
	source: string;
	texture: WebGLTexture;
	image: HTMLImageElement;

	static load(gl: WebGLRenderingContext, src: string): Promise<Texture> {
		let self = new Texture();

		self.source = src;

		self.texture = gl.createTexture();
		self.image = new Image();

		return new Promise<Texture>(resolve => {
			self.image.onload = () => {
				gl.bindTexture(gl.TEXTURE_2D, self.texture);
				gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, self.image);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
				gl.generateMipmap(gl.TEXTURE_2D);
				gl.bindTexture(gl.TEXTURE_2D, null);

				resolve(self);
			};

			self.image.src = src;
		});
	}
}