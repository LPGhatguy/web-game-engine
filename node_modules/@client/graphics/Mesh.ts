import Matrix4x4 from "typed-math/Matrix4x4";
import Vector3 from "typed-math/Vector3";
import Orientation from "typed-math/Orientation";
import Engine from "@client/Engine";
import Geometry from "./Geometry";

export default class Mesh {
	position: Vector3 = new Vector3();
	orientation: Orientation = new Orientation();
	transformDirty: boolean = true;
	geometry: Geometry;

	private transform: Matrix4x4 = new Matrix4x4();
	private engine: Engine;

	constructor(engine: Engine) {
		this.engine = engine;
	}

	recalculateTransform() {
		this.transformDirty = false;

		this.transform.setTranslation(
			this.position.x,
			this.position.y,
			this.position.z
		);

		this.transform.multiplyMatrix(this.orientation.getMatrix());
	}

	getTransformMatrix() {
		if (this.transformDirty) {
			this.recalculateTransform();
		}

		return this.transform;
	}

	draw() {
		let gl = this.engine.gl;
	}
}