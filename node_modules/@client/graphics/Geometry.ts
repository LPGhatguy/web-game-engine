import DynamicF32 from "@common/DynamicF32";

// TODO: use EBOs and be all optimized and stuff
export default class Geometry {
	vertexCount: number = 0;
	private buffer: DynamicF32;

	constructor(length: number = 64) {
		if (length >= 0) {
			this.buffer = new DynamicF32(length);
		}
	}

	getBuffer() {
		return this.buffer.internal;
	}

	addVertex(vertex: number[], texcoord: number[], normal: number[]) {
		this.buffer.concat([].concat(vertex, texcoord, normal));
		this.vertexCount++;
	}

	finish() {
		this.buffer.shrink();
	}
}