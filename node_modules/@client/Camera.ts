import Orientation from "typed-math/Orientation";
import Matrix4x4 from "typed-math/Matrix4x4";
import Vector3 from "typed-math/Vector3";

export interface ProjectedCamera {
	getProjectionMatrix(): Matrix4x4;
}

export default class Camera {
	position: Vector3;
	orientation: Orientation;
	dirty: boolean = true;

	private viewMatrix: Matrix4x4;

	constructor() {
		this.position = new Vector3();
		this.orientation = new Orientation();

		this.viewMatrix = new Matrix4x4();
	}

	recalculateViewMatrix() {
		this.dirty = false;

		this.viewMatrix.setTranslation(
			this.position.x,
			this.position.y,
			this.position.z
		);

		this.viewMatrix.multiplyMatrix(this.orientation.getMatrix());
	}

	getViewMatrix() {
		if (this.dirty) {
			this.recalculateViewMatrix();
		}

		return this.viewMatrix;
	}
}