import Camera, {ProjectedCamera} from "@client/Camera";
import Matrix4x4 from "typed-math/Matrix4x4";

export default class PerspectiveCamera extends Camera implements ProjectedCamera {
	fov: number;
	aspectRatio: number;
	near: number;
	far: number;
	private projectionMatrix: Matrix4x4 = new Matrix4x4();

	constructor(fov: number = 70, aspectRatio: number = 1, near: number = 0.1, far: number = 1000) {
		super();

		this.setProjection(fov, aspectRatio, near, far);
	}

	setProjection(fov: number = this.fov, aspectRatio: number = this.aspectRatio, near: number = this.near, far: number = this.far) {
		this.fov = fov;
		this.aspectRatio = aspectRatio;
		this.near = near;
		this.far = far;

		this.recalculateProjectionMatrix();
	}

	recalculateProjectionMatrix() {
		this.projectionMatrix.setPerspective(this.fov, this.aspectRatio, this.near, this.far);
	}

	getProjectionMatrix() {
		return this.projectionMatrix;
	}
}