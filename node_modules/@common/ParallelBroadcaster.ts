/* Parallel Broadcaster v1.0.0
 * Broadcasts events to subscribers simultaneously, then waits for the result.
 */

import Broadcaster from "./Broadcaster";

export default class ParallelBroadcaster extends Broadcaster {
	fire(args: any[] = []): Promise<void> {
		let proms = [];

		this.subscribers.forEach((sub) => {
			let result = sub.apply(undefined, args);

			if ("then" in result) {
				proms.push(result);
			}
		});

		return Promise.all(proms);
	}
}