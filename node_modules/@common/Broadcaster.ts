/* Broadcaster v2.1.0
 * Broadcasts events to subscribers in a parallel manner.
 */

/**
 * Broadcasts events using a subcriber model.
 */
export default class Broadcaster {
	/**
	 * The list of methods listening to this broadcaster.
	 */
	subscribers: Array<Function>;

	/**
	 * Builds a new Broadcaster.
	 */
	constructor() {
		this.subscribers = [];
	}

	/**
	 * Subscribe to the Broadcaster.
	 * @param sub The method to subscribe.
	 */
	subscribe(sub: Function) {
		this.subscribers.push(sub);
	}

	/**
	 * Fires an event using the Broadcaster.
	 * @param args The arguments to pass to the subscribers.
	 */
	fire(args: any[] = []) {
		for (var i = 0; i < this.subscribers.length; i++) {
			this.subscribers[i].apply(undefined, args);
		}
	}
}